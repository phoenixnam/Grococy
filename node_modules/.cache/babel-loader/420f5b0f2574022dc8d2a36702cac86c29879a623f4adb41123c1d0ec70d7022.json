{"ast":null,"code":"import { now, nextTick } from '../../shared/utils.js';\nexport default function onTouchEnd(event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const {\n    params,\n    touches,\n    rtlTranslate: rtl,\n    slidesGrid,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchEnd', e);\n  }\n  data.allowTouchCallbacks = false;\n  if (!data.isTouched) {\n    if (data.isMoved && params.grabCursor) {\n      swiper.setGrabCursor(false);\n    }\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  } // Return Grab Cursor\n\n  if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n    swiper.setGrabCursor(false);\n  } // Time diff\n\n  const touchEndTime = now();\n  const timeDiff = touchEndTime - data.touchStartTime; // Tap, doubleTap, Click\n\n  if (swiper.allowClick) {\n    swiper.updateClickedSlide(e);\n    swiper.emit('tap click', e);\n    if (timeDiff < 300 && touchEndTime - data.lastClickTime < 300) {\n      swiper.emit('doubleTap doubleClick', e);\n    }\n  }\n  data.lastClickTime = now();\n  nextTick(() => {\n    if (!swiper.destroyed) swiper.allowClick = true;\n  });\n  if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\n    data.isTouched = false;\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  data.isTouched = false;\n  data.isMoved = false;\n  data.startMoving = false;\n  let currentPos;\n  if (params.followFinger) {\n    currentPos = rtl ? swiper.translate : -swiper.translate;\n  } else {\n    currentPos = -data.currentTranslate;\n  }\n  if (params.cssMode) {\n    return;\n  }\n  if (swiper.params.freeMode && params.freeMode.enabled) {\n    swiper.freeMode.onTouchEnd({\n      currentPos\n    });\n    return;\n  } // Find current slide\n\n  let stopIndex = 0;\n  let groupSize = swiper.slidesSizesGrid[0];\n  for (let i = 0; i < slidesGrid.length; i += i < params.slidesPerGroupSkip ? 1 : params.slidesPerGroup) {\n    const increment = i < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n    if (typeof slidesGrid[i + increment] !== 'undefined') {\n      if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + increment]) {\n        stopIndex = i;\n        groupSize = slidesGrid[i + increment] - slidesGrid[i];\n      }\n    } else if (currentPos >= slidesGrid[i]) {\n      stopIndex = i;\n      groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n    }\n  } // Find current slide size\n\n  const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n  const increment = stopIndex < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n  if (timeDiff > params.longSwipesMs) {\n    // Long touches\n    if (!params.longSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      if (ratio >= params.longSwipesRatio) swiper.slideTo(stopIndex + increment);else swiper.slideTo(stopIndex);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      if (ratio > 1 - params.longSwipesRatio) swiper.slideTo(stopIndex + increment);else swiper.slideTo(stopIndex);\n    }\n  } else {\n    // Short swipes\n    if (!params.shortSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    const isNavButtonTarget = swiper.navigation && (e.target === swiper.navigation.nextEl || e.target === swiper.navigation.prevEl);\n    if (!isNavButtonTarget) {\n      if (swiper.swipeDirection === 'next') {\n        swiper.slideTo(stopIndex + increment);\n      }\n      if (swiper.swipeDirection === 'prev') {\n        swiper.slideTo(stopIndex);\n      }\n    } else if (e.target === swiper.navigation.nextEl) {\n      swiper.slideTo(stopIndex + increment);\n    } else {\n      swiper.slideTo(stopIndex);\n    }\n  }\n}","map":{"version":3,"names":["now","nextTick","onTouchEnd","event","swiper","data","touchEventsData","params","touches","rtlTranslate","rtl","slidesGrid","enabled","e","originalEvent","allowTouchCallbacks","emit","isTouched","isMoved","grabCursor","setGrabCursor","startMoving","allowSlideNext","allowSlidePrev","touchEndTime","timeDiff","touchStartTime","allowClick","updateClickedSlide","lastClickTime","destroyed","swipeDirection","diff","currentTranslate","startTranslate","currentPos","followFinger","translate","cssMode","freeMode","stopIndex","groupSize","slidesSizesGrid","i","length","slidesPerGroupSkip","slidesPerGroup","increment","ratio","longSwipesMs","longSwipes","slideTo","activeIndex","longSwipesRatio","shortSwipes","isNavButtonTarget","navigation","target","nextEl","prevEl"],"sources":["C:/Users/HP/Documents/Food/node_modules/swiper/core/events/onTouchEnd.js"],"sourcesContent":["import { now, nextTick } from '../../shared/utils.js';\nexport default function onTouchEnd(event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const {\n    params,\n    touches,\n    rtlTranslate: rtl,\n    slidesGrid,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchEnd', e);\n  }\n\n  data.allowTouchCallbacks = false;\n\n  if (!data.isTouched) {\n    if (data.isMoved && params.grabCursor) {\n      swiper.setGrabCursor(false);\n    }\n\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  } // Return Grab Cursor\n\n\n  if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n    swiper.setGrabCursor(false);\n  } // Time diff\n\n\n  const touchEndTime = now();\n  const timeDiff = touchEndTime - data.touchStartTime; // Tap, doubleTap, Click\n\n  if (swiper.allowClick) {\n    swiper.updateClickedSlide(e);\n    swiper.emit('tap click', e);\n\n    if (timeDiff < 300 && touchEndTime - data.lastClickTime < 300) {\n      swiper.emit('doubleTap doubleClick', e);\n    }\n  }\n\n  data.lastClickTime = now();\n  nextTick(() => {\n    if (!swiper.destroyed) swiper.allowClick = true;\n  });\n\n  if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\n    data.isTouched = false;\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n\n  data.isTouched = false;\n  data.isMoved = false;\n  data.startMoving = false;\n  let currentPos;\n\n  if (params.followFinger) {\n    currentPos = rtl ? swiper.translate : -swiper.translate;\n  } else {\n    currentPos = -data.currentTranslate;\n  }\n\n  if (params.cssMode) {\n    return;\n  }\n\n  if (swiper.params.freeMode && params.freeMode.enabled) {\n    swiper.freeMode.onTouchEnd({\n      currentPos\n    });\n    return;\n  } // Find current slide\n\n\n  let stopIndex = 0;\n  let groupSize = swiper.slidesSizesGrid[0];\n\n  for (let i = 0; i < slidesGrid.length; i += i < params.slidesPerGroupSkip ? 1 : params.slidesPerGroup) {\n    const increment = i < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n\n    if (typeof slidesGrid[i + increment] !== 'undefined') {\n      if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + increment]) {\n        stopIndex = i;\n        groupSize = slidesGrid[i + increment] - slidesGrid[i];\n      }\n    } else if (currentPos >= slidesGrid[i]) {\n      stopIndex = i;\n      groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n    }\n  } // Find current slide size\n\n\n  const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n  const increment = stopIndex < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n\n  if (timeDiff > params.longSwipesMs) {\n    // Long touches\n    if (!params.longSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n\n    if (swiper.swipeDirection === 'next') {\n      if (ratio >= params.longSwipesRatio) swiper.slideTo(stopIndex + increment);else swiper.slideTo(stopIndex);\n    }\n\n    if (swiper.swipeDirection === 'prev') {\n      if (ratio > 1 - params.longSwipesRatio) swiper.slideTo(stopIndex + increment);else swiper.slideTo(stopIndex);\n    }\n  } else {\n    // Short swipes\n    if (!params.shortSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n\n    const isNavButtonTarget = swiper.navigation && (e.target === swiper.navigation.nextEl || e.target === swiper.navigation.prevEl);\n\n    if (!isNavButtonTarget) {\n      if (swiper.swipeDirection === 'next') {\n        swiper.slideTo(stopIndex + increment);\n      }\n\n      if (swiper.swipeDirection === 'prev') {\n        swiper.slideTo(stopIndex);\n      }\n    } else if (e.target === swiper.navigation.nextEl) {\n      swiper.slideTo(stopIndex + increment);\n    } else {\n      swiper.slideTo(stopIndex);\n    }\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}