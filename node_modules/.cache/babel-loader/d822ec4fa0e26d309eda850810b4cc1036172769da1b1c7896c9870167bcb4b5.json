{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Documents\\\\Food\\\\src\\\\components\\\\Contents\\\\function\\\\GoogleLogin.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GoogleLogin = () => {\n  _s();\n  const [userData, setUserData] = useState(null);\n  const handleGoogleLogin = async () => {\n    // Load the Google API library\n    await window.gapi.load(\"auth2\", async () => {\n      // Initialize GoogleAuth object\n      const auth2 = await window.gapi.auth2.init({\n        client_id: \"YOUR_GOOGLE_CLIENT_ID\"\n      });\n\n      // Sign in with Google\n      try {\n        const googleUser = await auth2.signIn();\n        const profile = googleUser.getBasicProfile();\n        const user = {\n          email: profile.getEmail(),\n          password: \"randomPassword\" // You can set any password you want\n        };\n\n        // Send user data to your mock API\n        const response = await axios.post(\"https://your-mock-api-url.com/user/login\", user);\n\n        // Handle the response from the API as needed\n        console.log(\"API Response:\", response.data);\n        setUserData(response.data);\n      } catch (error) {\n        console.error(\"Google Sign-In Error:\", error);\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGoogleLogin,\n      children: \"Sign in with Google\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), userData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"User Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Email: \", userData.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Password: \", userData.password]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(GoogleLogin, \"hXjgW5Dna7AfY8GclqpRKYNaYWw=\");\n_c = GoogleLogin;\nexport default GoogleLogin;\nvar _c;\n$RefreshReg$(_c, \"GoogleLogin\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","GoogleLogin","_s","userData","setUserData","handleGoogleLogin","window","gapi","load","auth2","init","client_id","googleUser","signIn","profile","getBasicProfile","user","email","getEmail","password","response","post","console","log","data","error","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/HP/Documents/Food/src/components/Contents/function/GoogleLogin.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst GoogleLogin = () => {\r\n  const [userData, setUserData] = useState(null);\r\n\r\n  const handleGoogleLogin = async () => {\r\n    // Load the Google API library\r\n    await window.gapi.load(\"auth2\", async () => {\r\n      // Initialize GoogleAuth object\r\n      const auth2 = await window.gapi.auth2.init({\r\n        client_id: \"YOUR_GOOGLE_CLIENT_ID\",\r\n      });\r\n\r\n      // Sign in with Google\r\n      try {\r\n        const googleUser = await auth2.signIn();\r\n        const profile = googleUser.getBasicProfile();\r\n\r\n        const user = {\r\n          email: profile.getEmail(),\r\n          password: \"randomPassword\", // You can set any password you want\r\n        };\r\n\r\n        // Send user data to your mock API\r\n        const response = await axios.post(\r\n          \"https://your-mock-api-url.com/user/login\",\r\n          user\r\n        );\r\n\r\n        // Handle the response from the API as needed\r\n        console.log(\"API Response:\", response.data);\r\n        setUserData(response.data);\r\n      } catch (error) {\r\n        console.error(\"Google Sign-In Error:\", error);\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={handleGoogleLogin}>Sign in with Google</button>\r\n      {userData && (\r\n        <div>\r\n          <h2>User Data</h2>\r\n          <p>Email: {userData.email}</p>\r\n          <p>Password: {userData.password}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GoogleLogin;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAE9C,MAAMQ,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC;IACA,MAAMC,MAAM,CAACC,IAAI,CAACC,IAAI,CAAC,OAAO,EAAE,YAAY;MAC1C;MACA,MAAMC,KAAK,GAAG,MAAMH,MAAM,CAACC,IAAI,CAACE,KAAK,CAACC,IAAI,CAAC;QACzCC,SAAS,EAAE;MACb,CAAC,CAAC;;MAEF;MACA,IAAI;QACF,MAAMC,UAAU,GAAG,MAAMH,KAAK,CAACI,MAAM,CAAC,CAAC;QACvC,MAAMC,OAAO,GAAGF,UAAU,CAACG,eAAe,CAAC,CAAC;QAE5C,MAAMC,IAAI,GAAG;UACXC,KAAK,EAAEH,OAAO,CAACI,QAAQ,CAAC,CAAC;UACzBC,QAAQ,EAAE,gBAAgB,CAAE;QAC9B,CAAC;;QAED;QACA,MAAMC,QAAQ,GAAG,MAAMtB,KAAK,CAACuB,IAAI,CAC/B,0CAA0C,EAC1CL,IACF,CAAC;;QAED;QACAM,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEH,QAAQ,CAACI,IAAI,CAAC;QAC3CpB,WAAW,CAACgB,QAAQ,CAACI,IAAI,CAAC;MAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdH,OAAO,CAACG,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF,CAAC,CAAC;EACJ,CAAC;EAED,oBACEzB,OAAA;IAAA0B,QAAA,gBACE1B,OAAA;MAAQ2B,OAAO,EAAEtB,iBAAkB;MAAAqB,QAAA,EAAC;IAAmB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAC/D5B,QAAQ,iBACPH,OAAA;MAAA0B,QAAA,gBACE1B,OAAA;QAAA0B,QAAA,EAAI;MAAS;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClB/B,OAAA;QAAA0B,QAAA,GAAG,SAAO,EAACvB,QAAQ,CAACc,KAAK;MAAA;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC9B/B,OAAA;QAAA0B,QAAA,GAAG,YAAU,EAACvB,QAAQ,CAACgB,QAAQ;MAAA;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC7B,EAAA,CAhDID,WAAW;AAAA+B,EAAA,GAAX/B,WAAW;AAkDjB,eAAeA,WAAW;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}